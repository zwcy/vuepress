(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{369:function(e,t,r){"use strict";r.r(t);var a=r(17),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("ElasticSearch 是一个"),r("code",[e._v("分布式")]),e._v("、"),r("code",[e._v("高扩展")]),e._v("、"),r("code",[e._v("高实时")]),e._v("的"),r("code",[e._v("搜索与数据分析引擎")]),e._v("。它能很方便的使大量数据具有搜索、分析和探索的能力。充分利用ElasticSearch的水平伸缩性，能使数据在生产环境变得更有价值。ElasticSearch 的实现原理主要分为以下几个步骤，首先用户将数据提交到Elastic Search 数据库中，再通过分词控制器去将对应的语句分词，将其权重和分词结果一并存入数据，当用户搜索数据时候，再根据权重将结果排名，打分，再将返回结果呈现给用户。"),r("br"),e._v("\nElasticsearch是与名为Logstash的数据收集和日志解析引擎以及名为Kibana的分析和可视化平台一起开发的。这三个产品被设计成一个集成解决方案，称为“Elastic Stack”（以前称为“ELK stack”）。"),r("br"),e._v("\nElasticsearch可以用于搜索各种文档。它提供可扩展的搜索，具有接近实时的搜索，并支持多租户。”Elasticsearch是分布式的，这意味着索引可以被分成分片，每个分片可以有0个或多个副本。每个节点托管一个或多个分片，并充当协调器将操作委托给正确的分片。再平衡和路由是自动完成的。“相关数据通常存储在同一个索引中，该索引由一个或多个主分片和零个或多个复制分片组成。一旦创建了索引，就不能更改主分片的数量。\nElasticsearch使用Lucene，并试图通过JSON和Java API提供其所有特性。它支持facetting和percolating，如果新文档与注册查询匹配，这对于通知非常有用。另一个特性称为“网关”，处理索引的长期持久性；例如，在服务器崩溃的情况下，可以从网关恢复索引。Elasticsearch支持"),r("code",[e._v("实时GET")]),e._v("请求，适合作为NoSQL数据存储，但"),r("code",[e._v("缺少分布式事务")]),e._v("。")]),e._v(" "),r("h2",{attrs:{id:"有关概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#有关概念","aria-hidden":"true"}},[e._v("#")]),e._v(" 有关概念")]),e._v(" "),r("ul",[r("li",[e._v("cluster：代表一个"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E9%9B%86%E7%BE%A4",target:"_blank",rel:"noopener noreferrer"}},[e._v("集群"),r("OutboundLink")],1),e._v("，集群中有多个节点，其中有一个为主节点，这个主节点是可以通过选举产生的，主从节点是对于集群内部来说的。es的一个概念就是去中心化，字面上理解就是无中心节点，这是对于集群外部来说的，因为从外部来看es集群，在逻辑上是个整体，你与任何一个节点的通信和与整个es集群通信是等价的。")]),e._v(" "),r("li",[e._v("shards：代表索引分片，es可以把一个完整的索引分成多个分片，这样的好处是可以把一个大的索引拆分成多个，分布到不同的节点上。构成分布式搜索。分片的数量只能在索引创建前指定，并且索引创建后不能更改。")]),e._v(" "),r("li",[e._v("replicas：代表索引副本，es可以设置多个索引的副本，副本的作用一是提高系统的"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E5%AE%B9%E9%94%99%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[e._v("容错性"),r("OutboundLink")],1),e._v("，当某个节点某个分片损坏或丢失时可以从副本中恢复。二是提高es的查询效率，es会自动对搜索请求进行负载均衡。")]),e._v(" "),r("li",[e._v("recovery：代表数据恢复或叫数据重新分布，es在有节点加入或退出时会根据机器的负载对索引分片进行重新分配，挂掉的节点重新启动时也会进行数据恢复。")]),e._v(" "),r("li",[e._v("river：代表es的一个数据源，也是其它存储方式（如：数据库）同步数据到es的一个方法。它是以插件方式存在的一个es服务，通过读取river中的数据并把它索引到es中，官方的river有couchDB的，RabbitMQ的，Twitter的，Wikipedia的。")]),e._v(" "),r("li",[e._v("gateway：代表es索引快照的存储方式，es默认是先把索引存放到内存中，当内存满了时再持久化到本地硬盘。gateway对索引快照进行存储，当这个es集群关闭再重新启动时就会从gateway中读取索引备份数据。es支持多种类型的gateway，有本地文件系统（默认），"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F",target:"_blank",rel:"noopener noreferrer"}},[e._v("分布式文件系统"),r("OutboundLink")],1),e._v("，Hadoop的HDFS和amazon的s3"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E4%BA%91%E5%AD%98%E5%82%A8",target:"_blank",rel:"noopener noreferrer"}},[e._v("云存储"),r("OutboundLink")],1),e._v("服务。")]),e._v(" "),r("li",[e._v("discovery.zen：代表es的自动发现节点机制，es是一个基于p2p的系统，它先通过广播寻找存在的节点，再通过"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E5%A4%9A%E6%92%AD",target:"_blank",rel:"noopener noreferrer"}},[e._v("多播"),r("OutboundLink")],1),e._v("协议来进行节点之间的通信，同时也支持"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E7%82%B9%E5%AF%B9%E7%82%B9",target:"_blank",rel:"noopener noreferrer"}},[e._v("点对点"),r("OutboundLink")],1),e._v("的交互。")]),e._v(" "),r("li",[e._v("Transport：代表es内部节点或集群与客户端的交互方式，默认内部是使用tcp协议进行交互，同时它支持http协议（json格式）、"),r("a",{attrs:{href:"https://baike.baidu.com/item/thrift",target:"_blank",rel:"noopener noreferrer"}},[e._v("thrift"),r("OutboundLink")],1),e._v("、servlet、memcached、zeroMQ等的"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"}},[e._v("传输协议"),r("OutboundLink")],1),e._v("（通过"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E6%8F%92%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[e._v("插件"),r("OutboundLink")],1),e._v("方式集成）。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);