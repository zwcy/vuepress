(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{353:function(t,_,v){"use strict";v.r(_);var e=v(17),r=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"事务的四种隔离级别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务的四种隔离级别","aria-hidden":"true"}},[t._v("#")]),t._v(" 事务的四种隔离级别")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th"),t._v(" "),v("th",[t._v("脏读")]),t._v(" "),v("th",[t._v("不可重复读")]),t._v(" "),v("th",[t._v("幻读")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Read uncommitted")]),t._v(" "),v("td",[t._v("X")]),t._v(" "),v("td",[t._v("X")]),t._v(" "),v("td",[t._v("X")])]),t._v(" "),v("tr",[v("td",[t._v("Read committed")]),t._v(" "),v("td",[t._v("√")]),t._v(" "),v("td",[t._v("X")]),t._v(" "),v("td",[t._v("X")])]),t._v(" "),v("tr",[v("td",[t._v("Repeatable read")]),t._v(" "),v("td",[t._v("√")]),t._v(" "),v("td",[t._v("√")]),t._v(" "),v("td",[t._v("X")])]),t._v(" "),v("tr",[v("td",[t._v("Serializable")]),t._v(" "),v("td",[t._v("√")]),t._v(" "),v("td",[t._v("√")]),t._v(" "),v("td",[t._v("√")])])])]),t._v(" "),v("ol",[v("li",[v("p",[v("strong",[t._v("ISOLATION_READ_UNCOMMITTED")]),t._v("：读未提交，这是事务最低的隔离级别，它充许令外一个事务可以看到这个事务未提交的数据。\n这种隔离级别会产生脏读，不可重复读和幻像读。、")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("ISOLATION_READ_COMMITTED")]),t._v("：读已提交，保证一个事务修改的数据提交后才能被另外一个事务读取。另外一个事务不能读取该事务未提交的数据")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("ISOLATION_REPEATABLE_READ")]),t._v("：可重复读，这种事务隔离级别可以防止脏读，不可重复读。但是可能出现幻像读。\n它除了保证一个事务不能读取另一个事务未提交的数据外，还保证了避免下面的情况产生(不可重复读)。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("ISOLATION_SERIALIZABLE")]),t._v("：串行化，这是花费最高代价但是最可靠的事务隔离级别。事务被处理为"),v("strong",[t._v("顺序执行")]),t._v("。\n除了防止脏读，不可重复读外，还避免了幻像读。")])])])])}),[],!1,null,null,null);_.default=r.exports}}]);