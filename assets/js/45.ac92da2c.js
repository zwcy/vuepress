(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{410:function(t,s,a){"use strict";a.r(s);var n=a(17),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("Go")]),t._v("（又称"),a("strong",[t._v("Golang")]),t._v("）是Google开发的一种"),a("code",[t._v("静态强类型")]),t._v("、"),a("code",[t._v("编译型")]),t._v("、"),a("code",[t._v("并发型")]),t._v("，并具有"),a("code",[t._v("垃圾回收")]),t._v("功能的编程语言。")]),t._v(" "),a("h3",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述","aria-hidden":"true"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。Go的并行模型是以东尼·霍尔的"),a("code",[t._v("通信顺序进程")]),t._v("（CSP）为基础，采取类似模型的其他语言包括Occam和Limbo，但它也具有Pi运算的特征，比如通道传输。在1.8版本中开放"),a("code",[t._v("插件")]),t._v("（Plugin）的支持，这意味着现在能从Go中"),a("code",[t._v("动态加载部分函数")]),t._v("。")]),t._v(" "),a("p",[t._v("Go内嵌了"),a("code",[t._v("关联数组")]),t._v("（也称为哈希表（Hashes）或字典（Dictionaries）），就像字符串类型一样")]),t._v(" "),a("h3",{attrs:{id:"撰写风格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撰写风格","aria-hidden":"true"}},[t._v("#")]),t._v(" 撰写风格")]),t._v(" "),a("p",[t._v("在Go中有几项规定，而且这些是强制的，当不匹配以下规定时编译将会产生错误。")]),t._v(" "),a("ul",[a("li",[t._v("每行程序结束后不需要撰写分号（;）。")]),t._v(" "),a("li",[t._v("大括号（{）不能够换行放置。")]),t._v(" "),a("li",[t._v("if判断式和for循环不需要以小括号包覆起来。")])]),t._v(" "),a("blockquote",[a("p",[t._v("Go亦有内置gofmt工具，能够自动整理代码多余的空白、变量名称对齐、并将对齐空格转换成Tab")])]),t._v(" "),a("h4",{attrs:{id:"指针示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指针示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 指针示例")]),t._v(" "),a("p",[t._v("指针变量 "),a("code",[t._v("*")]),t._v(" 和地址值 "),a("code",[t._v("&")]),t._v(" 的区别：指针变量保存的是一个地址值，会分配独立的内存来存储一个整型数字。当变量前面有 "),a("code",[t._v("*")]),t._v(" 标识时，才等同于 "),a("code",[t._v("&")]),t._v(" 的用法，否则会直接输出一个整型数字。")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n   ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a的值为"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*ptr为"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ptr为"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xx000xx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);