(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{341:function(t,a,e){"use strict";e.r(a);var r=e(17),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h4",{attrs:{id:"响应式编程核心特征"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应式编程核心特征","aria-hidden":"true"}},[t._v("#")]),t._v(" 响应式编程核心特征")]),t._v(" "),e("ul",[e("li",[t._v("变化传递(propagation of change)")]),t._v(" "),e("li",[t._v("基于数据流(data stream)")]),t._v(" "),e("li",[t._v("声明式(declarative)")])]),t._v(" "),e("h4",{attrs:{id:"响应式流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应式流","aria-hidden":"true"}},[t._v("#")]),t._v(" 响应式流")]),t._v(" "),e("ul",[e("li",[t._v("异步非阻塞")]),t._v(" "),e("li",[t._v("流量控制")])]),t._v(" "),e("p",[t._v("(ps Java Stream是一种同步API)")]),t._v(" "),e("p",[t._v("阻塞造成的性能损失，我们通常有两种思路来解决")]),t._v(" "),e("ol",[e("li",[t._v("并行化：使用更多的线程和硬件资源；")]),t._v(" "),e("li",[t._v("异步化：基于现有的资源来提高执行效率。")])])])}),[],!1,null,null,null);a.default=v.exports}}]);