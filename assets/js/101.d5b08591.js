(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{357:function(r,e,n){"use strict";n.r(e);var t=n(17),a=Object(t.a)({},(function(){var r=this,e=r.$createElement,n=r._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[n("h3",{attrs:{id:"服务发现组件：eureka"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务发现组件：eureka","aria-hidden":"true"}},[r._v("#")]),r._v(" 服务发现组件：eureka")]),r._v(" "),n("p",[r._v("eureka client注册到eureka服务端上，不管服务提供者还是服务消费者都要注册。\neureka服务端和客户端有心跳机制，默认30秒。90秒没有收到，就会剔除掉这个客户端。\n服务消费者客户端上有服务注册表缓存，eureka服务端down之后，也能找到服务提供者。")]),r._v(" "),n("hr"),r._v(" "),n("h3",{attrs:{id:"客户端负载均衡组件：ribbon"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#客户端负载均衡组件：ribbon","aria-hidden":"true"}},[r._v("#")]),r._v(" 客户端负载均衡组件：ribbon")]),r._v(" "),n("p",[r._v("三种方式："),n("code",[r._v("轮循")]),r._v("，"),n("code",[r._v("随机")]),r._v("，"),n("code",[r._v("根据响应时间加权")]),r._v("\n默认策略是"),n("code",[r._v("轮循")]),r._v("。\n可以自定义\neureka包含有ribbon的jar包")]),r._v(" "),n("hr"),r._v(" "),n("h3",{attrs:{id:"feign：命名式的http-client"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#feign：命名式的http-client","aria-hidden":"true"}},[r._v("#")]),r._v(" feign：命名式的http client")]),r._v(" "),n("p",[r._v("整合了ribbon和eureka    支持springMVC的注解\n包含feign encoder ，feign decoder，feign contract")]),r._v(" "),n("hr"),r._v(" "),n("h3",{attrs:{id:"hystrix：断路器和超时机制的组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix：断路器和超时机制的组件","aria-hidden":"true"}},[r._v("#")]),r._v(" hystrix：断路器和超时机制的组件")]),r._v(" "),n("p",[r._v("没有保护应用会导致雪崩效应\n超时机制\n断路器模式：依赖的服务有大量超时，不去请求，快速失败\n断路器状态：关闭，打开，断开\n打开，直接返回状态不可用\n半开，尝试请求，成功率达标，断路器关闭，反之打开\n关闭，正常请求")]),r._v(" "),n("p",[r._v("1.监控，总共请求多少次，有多少失败，失败率达到标准，断路器打开\n2.断路器状态\n3.半开时，分流\n4.自我修复，断路器状态切换")]),r._v(" "),n("p",[r._v("当对特定服务呼叫，hystrix默认5秒钟失败20次，打开断路器\n回退机制，fallback，可以由开发人员提供\nhealth indicator健康指标\nhystrix.stream 监控")]),r._v(" "),n("p",[r._v("turbine 监控整个集群")]),r._v(" "),n("hr"),r._v(" "),n("p",[r._v("zuul 实现比较好的api gateway\n反向代理所有注册在eureka上的服务")]),r._v(" "),n("p",[r._v("Sidecar 支持使用其他语言的微服务")]),r._v(" "),n("hr"),r._v(" "),n("h3",{attrs:{id:"spring-cloud-config统一管理微服务配置的组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-config统一管理微服务配置的组件","aria-hidden":"true"}},[r._v("#")]),r._v(" spring cloud config统一管理微服务配置的组件")]),r._v(" "),n("p",[r._v("集中管理\n动态调整\n不同环境不同配置\n自动刷新\nconfig server\n连上GIT")]),r._v(" "),n("p",[r._v("config client\n获取git上的配置")]),r._v(" "),n("hr"),r._v(" "),n("p",[r._v("spring cloud bus\n基于mq\ntrace追踪")])])}),[],!1,null,null,null);e.default=a.exports}}]);