(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{375:function(t,e,v){"use strict";v.r(e);var _=v(17),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h4",{attrs:{id:"cap设计原则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cap设计原则","aria-hidden":"true"}},[t._v("#")]),t._v(" CAP设计原则")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("一致性")]),t._v("（C）：在分布式系统中的所有数据备份，在同一时刻是否同样的值。（等同于所有节点访问同一份最新的数据副本）")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("可用性")]),t._v("（A）：在集群中一部分节点故障后，集群整体是否还能响应客户端的读写请求。（对数据更新具备高可用性）")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("分区容忍性")]),t._v("（P）：就是当由于网络故障之时，导致集群里的机器不能保证其互相保持正常通信之时，每台机器所具备各自为战能力，保证服务能否正常使用")])])]),t._v(" "),v("p",[t._v("CAP原则的精髓就是要么AP，要么CP，要么AC，但是不存在CAP。")]),t._v(" "),v("p",[t._v("如果在某个分布式系统中数据无副本， 那么系统必然满足强一致性条件， 因为只有独一数据，不会出现数据不一致的情况，此时C和P两要素具备")]),t._v(" "),v("p",[t._v("但是如果系统发生了网络分区状况或者宕机，必然导致某些数据不可以访问")]),t._v(" "),v("p",[t._v("此时可用性条件就不能被满足，即在此情况下获得了CP系统，但是CAP不可同时满足。必然导致某些数据不可以访问，此时可用性条件就不能被满足，即在此情况下获得了CP系统，但是CAP不可同时满足。")])])}),[],!1,null,null,null);e.default=a.exports}}]);