(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{404:function(s,n,a){"use strict";a.r(n);var e=a(17),r=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h4",{attrs:{id:"运行一个web应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行一个web应用","aria-hidden":"true"}},[s._v("#")]),s._v(" 运行一个web应用")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 载入镜像\ndocker pull training/webapp  \n\n# 运行容器\ndocker run -d -P training/webapp python app.py\n# -d:让容器在后台运行。\n# -P:将容器内部使用的网络端口映射到我们使用的主机上。\n\n# 查看容器内部运行的进程\ndocker top wizardly_chandrasekhar\n\n# 查看 Docker 的底层信息。它会返回一个 JSON 文件记录着 Docker 容器的配置和状态信息\ndocker inspect wizardly_chandrasekhar \n\n# 重启WEB应用容器，已经停止的容器，可以使用命令 docker start 来启动。\ndocker start wizardly_chandrasekhar\n\n# 正在运行的容器，我们可以使用 docker restart 命令来重启\ndocker restart  wizardly_chandrasekhar\n\n# 移除WEB应用容器(删除容器时，容器必须是停止状态)\ndocker rm wizardly_chandrasekhar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("blockquote",[a("p",[s._v("docker镜像的名字中不能包含大写字母,改成小写\n如果你不指定一个镜像的版本标签，例如你只使用 ubuntu，docker 将默认使用 ubuntu:latest 镜像。")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# docker redis 启动  --privileged=true加权限\ndocker run --privileged=true   -p 6379:6379 -v /root/data:/data \\\n  -d docker.io/redis:5.0.5 redis-server --appendonly yes\n\n# 连接、查看容器,使用redis镜像执行redis-cli命令连接到刚启动的容器\ndocker exec -it 0bf909dfb2d2 redis-cli\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])}),[],!1,null,null,null);n.default=r.exports}}]);